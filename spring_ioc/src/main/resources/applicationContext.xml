<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!-- UserService的创建权交给了Spring -->
    <bean id="userService" class="com.ishavanti.ioc.demo1.UserServiceImpl">
        <!-- 注入属性 -->
        <property name="name" value="李四" />
    </bean>

    <!-- Bean的实例化的三种方式 -->
    <!-- 第一种：无参构造器的方式 -->
    <bean id="bean1" class="com.ishavanti.ioc.demo2.Bean1"/>
    <!-- 第二种：静态工厂的方式 -->
    <bean id="bean2" class="com.ishavanti.ioc.demo2.Bean2Factory" factory-method="createBean2"/>
    <!-- 第三种：实例工厂的方式 -->
    <bean id="bean3factory" class="com.ishavanti.ioc.demo2.Bean3Factory"/>
    <bean id="bean3" factory-bean="bean3factory" factory-method="createBean3"/>

    <!-- Bean的作用域 -->
    <!--<bean id="person" class="com.ishavanti.ioc.demo3.Person"/>-->
    <bean id="person" class="com.ishavanti.ioc.demo3.Person" scope="prototype"/>

    <!-- Bean的生命周期方法 -->
    <bean id="man" class="com.ishavanti.ioc.demo3.Man" init-method="setup" destroy-method="teardown">
        <property name="name" value="张三"/>
    </bean>
    <bean class="com.ishavanti.ioc.demo3.MyBeanPostProcessor"/>

    <bean id="userDao" class="com.ishavanti.ioc.demo3.UserDaoImpl"/>

    <!-- Bean的构造方法的属性注入 -->
    <bean id="user" class="com.ishavanti.ioc.demo4.User">
        <constructor-arg name="name" value="张三"/>
        <constructor-arg name="age" value="24"/>
    </bean>

    <!-- Bean的setter方法的属性注入 -->
    <bean id="person4" class="com.ishavanti.ioc.demo4.Person">
        <property name="name" value="李四"/>
        <property name="age" value="18"/>
        <property name="cat" ref="cat"/>
    </bean>
    <bean id="cat" class="com.ishavanti.ioc.demo4.Cat">
        <property name="name" value="kitty"/>
    </bean>

    <!-- Bean的p名称空间的属性注入 -->
    <bean id="person4p" class="com.ishavanti.ioc.demo4.Person" p:name="李四" p:age="18" p:cat-ref="cat4p"/>
    <bean id="cat4p" class="com.ishavanti.ioc.demo4.Cat" p:name="kitty"/>

    <!-- Bean的SpEL的属性注入 -->
    <bean id="category" class="com.ishavanti.ioc.demo4.Category">
        <property name="name" value="#{'服装'}"/>
    </bean>
    <bean id="productInfo" class="com.ishavanti.ioc.demo4.ProductInfo"/>
    <bean id="product" class="com.ishavanti.ioc.demo4.Product">
        <property name="name" value="#{'男装'}"/>
        <property name="price" value="#{productInfo.calculatePrice()}"/>
        <property name="category" value="#{category}"/>
    </bean>

    <!-- 集合类型的属性注入 -->
    <bean id="collectionBean" class="com.ishavanti.ioc.demo5.CollectionBean">
        <!-- 数组类型 -->
        <property name="arr">
            <list>
                <value>aaa</value>
                <value>bbb</value>
                <value>ccc</value>
            </list>
        </property>
        <!-- List类型 -->
        <property name="list">
            <list>
                <value>ddd</value>
                <value>eee</value>
            </list>
        </property>
        <!-- Set类型 -->
        <property name="set">
            <set>
                <value>fff</value>
                <value>ggg</value>
            </set>
        </property>
        <!-- Map类型 -->
        <property name="map">
            <map>
                <entry key="aaa" value="111"/>
                <entry key="bbb" value="222"/>
            </map>
        </property>
        <!-- Properties类型 -->
        <property name="properties">
            <props>
                <prop key="username">root</prop>
                <prop key="password">root</prop>
            </props>
        </property>
    </bean>
</beans>